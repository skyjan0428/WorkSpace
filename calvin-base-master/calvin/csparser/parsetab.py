
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '5BE4546DCDEF3234986424D352417EE4'
    
_lr_action_items = {'EQ':([7,8,156,],[15,-79,168,]),'APPLY':([0,2,4,5,6,8,9,10,11,12,14,16,23,24,26,27,29,30,31,32,33,34,35,37,40,41,43,44,47,48,51,52,54,58,61,68,72,75,86,87,88,89,93,95,96,99,101,106,107,109,110,112,113,114,120,121,122,123,126,128,131,142,151,152,158,159,163,164,166,170,172,187,],[-2,-4,-2,-3,-6,-79,-8,19,-11,-9,-5,-10,-72,-30,-90,-27,-71,-84,-89,19,-25,-42,-85,-82,-28,-83,-87,-86,-24,-88,-26,-80,-29,-7,-78,-23,-65,-81,-40,-60,-48,-52,-44,-47,-53,-91,-99,-41,-38,-46,-36,-64,-39,-37,-77,-108,-110,-107,-102,-49,-58,-111,-105,-43,-34,-45,-103,-104,-106,-31,-109,-12,]),'SLASH':([8,23,26,29,30,31,35,37,41,43,44,48,52,63,74,75,76,80,99,101,127,130,143,153,],[-79,-72,-90,-71,-84,-89,-85,-82,-83,-87,-86,-88,-80,91,91,-81,91,91,-91,-99,91,154,91,167,]),'GT':([8,18,21,23,26,29,30,31,34,35,36,37,41,42,43,44,45,46,48,52,53,55,59,72,75,99,101,112,180,],[-79,-61,63,-72,-90,-71,-84,-89,-42,-85,-59,-82,-83,74,-87,-86,76,-79,-88,-80,80,-50,-51,-65,-81,-91,-99,-64,-61,]),'RPAREN':([8,23,26,29,30,31,35,37,41,43,44,48,52,75,81,99,101,103,115,116,117,118,121,123,139,140,144,149,150,151,157,160,161,163,164,165,166,169,172,173,189,190,],[-79,-72,-90,-71,-84,-89,-85,-82,-83,-87,-86,-88,-80,-81,-2,-91,-99,-2,-73,-76,146,-74,-108,-107,158,-69,-2,-2,166,-105,-68,170,-75,-103,-104,172,-106,-67,-109,-70,-2,191,]),'AT':([63,74,76,80,90,127,143,154,167,],[97,97,97,97,97,97,97,-62,-63,]),'NUMBER':([0,2,4,5,6,8,9,10,11,12,14,15,16,17,23,24,26,27,28,29,30,31,32,33,34,35,37,40,41,43,44,47,48,51,52,54,58,61,66,67,68,72,75,79,86,87,88,89,91,93,95,96,97,99,101,102,106,107,109,110,112,113,114,120,121,122,123,126,128,129,131,136,138,142,151,152,158,159,163,164,166,168,170,172,175,176,177,178,179,181,182,183,184,185,187,188,191,],[-2,-4,-2,-3,-6,-79,-8,44,-11,-9,-5,44,-10,44,-72,-30,-90,-27,-2,-71,-84,-89,44,-25,-42,-85,-82,-28,-83,-87,-86,-24,-88,-26,-80,-29,-7,-78,-98,44,-23,-65,-81,-66,-40,-60,-48,-52,44,-44,-47,-53,133,-91,-99,-97,-41,-38,-46,-36,-64,-39,-37,-77,-108,-110,-107,-102,-49,44,-58,44,-96,-111,-105,-43,-34,-45,-103,-104,-106,44,-31,-109,-2,44,-14,-13,-19,-20,-17,-16,44,-18,-12,-15,-35,]),'COMMA':([8,23,26,29,30,31,35,37,41,43,44,48,52,60,61,72,75,86,87,88,89,93,95,96,99,100,101,102,106,108,109,112,113,115,116,120,128,131,142,152,155,157,159,161,173,],[-79,-72,-90,-71,-84,-89,-85,-82,-83,-87,-86,-88,-80,83,-78,-65,-81,127,-60,-48,-52,-44,-47,-53,-91,137,-99,138,127,143,-52,-64,127,145,-76,-77,-49,-58,83,-43,-95,169,-52,-75,-70,]),'LBRACE':([0,2,4,5,6,8,9,10,11,12,14,15,16,17,23,24,26,27,28,29,30,31,32,33,34,35,37,40,41,43,44,47,48,51,52,54,58,61,66,67,68,72,75,79,86,87,88,89,91,93,95,96,99,101,102,106,107,109,110,112,113,114,115,116,118,120,121,122,123,126,128,129,131,136,138,142,151,152,158,159,161,163,164,166,168,170,171,172,174,175,176,177,178,179,181,182,183,184,185,187,188,191,],[-2,-4,-2,-3,-6,-79,-8,25,-11,-9,-5,25,-10,25,-72,-30,-90,-27,-2,-71,-84,-89,25,-25,-42,-85,-82,-28,-83,-87,-86,-24,-88,-26,-80,-29,-7,-78,-98,25,-23,-65,-81,-66,-40,-60,-48,-52,25,-44,-47,-53,-91,-99,-97,-41,-38,-46,-36,-64,-39,-37,-73,-76,-74,-77,-108,-110,-107,-102,-49,25,-58,25,-96,-111,-105,-43,-34,-45,-75,-103,-104,-106,25,-31,-2,-109,175,-2,25,-14,-13,-19,-20,-17,-16,25,-18,-12,-15,-35,]),'COMPONENT':([0,2,4,5,6,8,9,11,14,16,23,26,29,30,31,35,37,41,43,44,48,52,58,75,99,101,187,],[-2,-4,13,-3,-6,-79,13,-11,-5,-10,-72,-90,-71,-84,-89,-85,-82,-83,-87,-86,-88,-80,-7,-81,-91,-99,-12,]),'NULL':([0,2,4,5,6,8,9,10,11,12,14,15,16,17,23,24,26,27,28,29,30,31,32,33,34,35,37,40,41,43,44,47,48,51,52,54,58,61,66,67,68,72,75,79,86,87,88,89,91,93,95,96,99,101,102,106,107,109,110,112,113,114,120,121,122,123,126,128,129,131,136,138,142,151,152,158,159,163,164,166,168,170,172,175,176,177,178,179,181,182,183,184,185,187,188,191,],[-2,-4,-2,-3,-6,-79,-8,26,-11,-9,-5,26,-10,26,-72,-30,-90,-27,-2,-71,-84,-89,26,-25,-42,-85,-82,-28,-83,-87,-86,-24,-88,-26,-80,-29,-7,-78,-98,26,-23,-65,-81,-66,-40,-60,-48,-52,26,-44,-47,-53,-91,-99,-97,-41,-38,-46,-36,-64,-39,-37,-77,-108,-110,-107,-102,-49,26,-58,26,-96,-111,-105,-43,-34,-45,-103,-104,-106,26,-31,-109,-2,26,-14,-13,-19,-20,-17,-16,26,-18,-12,-15,-35,]),'LBRACK':([0,2,4,5,6,8,9,10,11,12,14,15,16,17,23,24,26,27,28,29,30,31,32,33,34,35,36,37,40,41,43,44,47,48,51,52,54,58,61,66,67,68,72,75,79,86,87,88,89,91,93,95,96,99,101,102,106,107,109,110,112,113,114,120,121,122,123,126,128,129,131,136,138,142,151,152,158,159,163,164,166,168,170,172,175,176,177,178,179,180,181,182,183,184,185,187,188,191,],[-2,-4,-2,-3,-6,-79,-8,28,-11,-9,-5,28,-10,28,-72,-30,-90,-27,-2,-71,-84,-89,28,-25,-42,-85,71,-82,-28,-83,-87,-86,-24,-88,-26,-80,-29,-7,-78,-98,28,-23,-65,-81,-66,-40,-60,-48,-52,28,-44,-47,-53,-91,-99,-97,-41,-38,-46,-36,-64,-39,-37,-77,-108,-110,-107,-102,-49,28,-58,28,-96,-111,-105,-43,-34,-45,-103,-104,-106,28,-31,-109,-2,28,-14,-13,-19,71,-20,-17,-16,28,-18,-12,-15,-35,]),'UNOT':([84,85,124,125,147,148,],[125,125,125,125,125,125,]),'RULE':([0,2,4,5,6,8,9,10,11,12,14,16,23,24,26,27,29,30,31,32,33,34,35,37,40,41,43,44,47,48,51,52,54,58,61,68,72,75,86,87,88,89,93,95,96,99,101,106,107,109,110,112,113,114,120,121,122,123,126,128,131,142,151,152,158,159,163,164,166,170,172,187,],[-2,-4,-2,-3,-6,-79,-8,20,-11,-9,-5,-10,-72,-30,-90,-27,-71,-84,-89,20,-25,-42,-85,-82,-28,-83,-87,-86,-24,-88,-26,-80,-29,-7,-78,-23,-65,-81,-40,-60,-48,-52,-44,-47,-53,-91,-99,-41,-38,-46,-36,-64,-39,-37,-77,-108,-110,-107,-102,-49,-58,-111,-105,-43,-34,-45,-103,-104,-106,-31,-109,-12,]),'DEFINE':([0,5,6,8,14,23,26,29,30,31,35,37,41,43,44,48,52,58,75,99,101,],[1,1,-6,-79,-5,-72,-90,-71,-84,-89,-85,-82,-83,-87,-86,-88,-80,-7,-81,-91,-99,]),'FALSE':([0,2,4,5,6,8,9,10,11,12,14,15,16,17,23,24,26,27,28,29,30,31,32,33,34,35,37,40,41,43,44,47,48,51,52,54,58,61,66,67,68,72,75,79,86,87,88,89,91,93,95,96,99,101,102,106,107,109,110,112,113,114,120,121,122,123,126,128,129,131,136,138,142,151,152,158,159,163,164,166,168,170,172,175,176,177,178,179,181,182,183,184,185,187,188,191,],[-2,-4,-2,-3,-6,-79,-8,31,-11,-9,-5,31,-10,31,-72,-30,-90,-27,-2,-71,-84,-89,31,-25,-42,-85,-82,-28,-83,-87,-86,-24,-88,-26,-80,-29,-7,-78,-98,31,-23,-65,-81,-66,-40,-60,-48,-52,31,-44,-47,-53,-91,-99,-97,-41,-38,-46,-36,-64,-39,-37,-77,-108,-110,-107,-102,-49,31,-58,31,-96,-111,-105,-43,-34,-45,-103,-104,-106,31,-31,-109,-2,31,-14,-13,-19,-20,-17,-16,31,-18,-12,-15,-35,]),'AND':([8,121,122,123,126,150,151,163,164,166,172,],[-79,-108,147,-107,147,147,-105,-103,147,-106,-109,]),'LPAREN':([8,36,56,57,69,70,72,84,85,111,112,119,123,124,125,141,147,148,180,186,],[-79,-2,81,-101,103,-33,-65,124,124,144,-64,-100,149,124,124,-32,124,124,-2,189,]),'VOIDPORT':([0,2,4,5,6,8,9,10,11,12,14,16,23,24,26,27,29,30,31,32,33,34,35,37,40,41,43,44,47,48,51,52,54,58,61,68,72,75,76,80,86,87,88,89,93,95,96,99,101,106,107,109,110,112,113,114,120,121,122,123,126,128,131,142,151,152,158,159,163,164,166,170,172,175,176,177,178,179,181,182,183,184,185,187,188,191,],[-2,-4,-2,-3,-6,-79,-8,34,-11,-9,-5,-10,-72,-30,-90,-27,-71,-84,-89,34,-25,-42,-85,-82,-28,-83,-87,-86,-24,-88,-26,-80,-29,-7,-78,-23,-65,-81,34,34,-40,-60,-48,-52,-44,-47,-53,-91,-99,-41,-38,-46,-36,-64,-39,-37,-77,-108,-110,-107,-102,-49,-58,-111,-105,-43,-34,-45,-103,-104,-106,-31,-109,-2,34,-14,-13,-19,-20,-17,-16,34,-18,-12,-15,-35,]),'DOT':([0,2,4,5,6,8,9,10,11,12,14,16,23,24,26,27,29,30,31,32,33,34,35,37,40,41,43,44,46,47,48,51,52,54,56,57,58,61,63,68,72,74,75,76,80,86,87,88,89,90,93,95,96,99,101,106,107,109,110,111,112,113,114,119,120,121,122,123,126,127,128,131,132,142,143,151,152,154,158,159,163,164,166,167,170,172,175,176,177,178,179,181,182,183,184,185,187,188,191,],[-2,-4,-2,-3,-6,-79,-8,38,-11,-9,-5,-10,-72,-30,-90,-27,-71,-84,-89,38,-25,-42,-85,-82,-28,-83,-87,-86,78,-24,-88,-26,-80,-29,82,-101,-7,-78,38,-23,-65,38,-81,38,38,-40,-60,-48,-52,38,-44,-47,-53,-91,-99,-41,-38,-46,-36,82,-64,-39,-37,-100,-77,-108,-110,-107,-102,38,-49,-58,78,-111,38,-105,-43,-62,-34,-45,-103,-104,-106,-63,-31,-109,-2,38,-14,-13,-19,-20,-17,-16,38,-18,-12,-15,-35,]),'GROUP':([0,2,4,5,6,8,9,10,11,12,14,16,23,24,26,27,29,30,31,32,33,34,35,37,40,41,43,44,47,48,51,52,54,58,61,68,72,75,86,87,88,89,93,95,96,99,101,106,107,109,110,112,113,114,120,121,122,123,126,128,131,142,151,152,158,159,163,164,166,170,172,187,],[-2,-4,-2,-3,-6,-79,-8,39,-11,-9,-5,-10,-72,-30,-90,-27,-71,-84,-89,39,-25,-42,-85,-82,-28,-83,-87,-86,-24,-88,-26,-80,-29,-7,-78,-23,-65,-81,-40,-60,-48,-52,-44,-47,-53,-91,-99,-41,-38,-46,-36,-64,-39,-37,-77,-108,-110,-107,-102,-49,-58,-111,-105,-43,-34,-45,-103,-104,-106,-31,-109,-12,]),'RARROW':([115,116,118,146,161,162,],[-73,-76,-74,-2,-75,171,]),'$end':([0,2,3,4,5,6,8,9,10,11,12,14,16,22,23,24,26,27,29,30,31,32,33,34,35,37,40,41,43,44,47,48,50,51,52,54,58,61,68,72,75,86,87,88,89,93,95,96,99,101,106,107,109,110,112,113,114,120,121,122,123,126,128,131,142,151,152,158,159,163,164,166,170,172,187,],[-2,-4,0,-2,-3,-6,-79,-8,-2,-11,-9,-5,-10,-22,-72,-30,-90,-27,-71,-84,-89,-21,-25,-42,-85,-82,-28,-83,-87,-86,-24,-88,-1,-26,-80,-29,-7,-78,-23,-65,-81,-40,-60,-48,-52,-44,-47,-53,-91,-99,-41,-38,-46,-36,-64,-39,-37,-77,-108,-110,-107,-102,-49,-58,-111,-105,-43,-34,-45,-103,-104,-106,-31,-109,-12,]),'STRING':([0,2,4,5,6,8,9,10,11,12,14,15,16,17,23,24,25,26,27,28,29,30,31,32,33,34,35,37,40,41,43,44,47,48,51,52,54,58,61,64,65,66,67,68,72,75,79,86,87,88,89,91,93,95,96,97,98,99,100,101,102,106,107,109,110,112,113,114,120,121,122,123,126,128,129,131,136,137,138,142,151,152,155,158,159,163,164,166,168,170,172,175,176,177,178,179,181,182,183,184,185,187,188,191,],[-2,-4,-2,-3,-6,-79,-8,52,-11,-9,-5,52,-10,52,-72,-30,-2,-90,-27,-2,-71,-84,-89,52,-25,-42,-85,-82,-28,-83,75,-86,-24,-88,-26,-80,-29,-7,-78,-94,52,-98,52,-23,-65,-81,-66,-40,-60,-48,-52,52,-44,-47,-53,134,75,-91,-93,-99,-97,-41,-38,-46,-36,-64,-39,-37,-77,-108,-110,-107,-102,-49,52,-58,52,-92,-96,-111,-105,-43,-95,-34,-45,-103,-104,-106,52,-31,-109,-2,52,-14,-13,-19,-20,-17,-16,52,-18,-12,-15,-35,]),'RBRACK':([26,28,30,31,35,37,41,43,44,48,52,66,67,75,99,101,102,104,138,],[-90,-2,-84,-89,-85,-82,-83,-87,-86,-88,-80,-98,101,-81,-91,-99,-97,141,-96,]),'RBRACE':([25,26,30,31,34,35,37,41,43,44,48,52,64,65,72,75,86,87,88,89,93,95,96,99,100,101,106,107,109,110,112,113,114,128,131,137,152,155,158,159,170,179,181,182,183,184,185,188,191,],[-2,-90,-84,-89,-42,-85,-82,-83,-87,-86,-88,-80,-94,99,-65,-81,-40,-60,-48,-52,-44,-47,-53,-91,-93,-99,-41,-38,-46,-36,-64,-39,-37,-49,-58,-92,-43,-95,-34,-45,-31,-19,-20,-17,-16,187,-18,-15,-35,]),'IDENTIFIER':([0,1,2,4,5,6,8,9,10,11,12,13,14,15,16,17,19,20,23,24,26,27,29,30,31,32,33,34,35,37,38,39,40,41,43,44,47,48,49,51,52,54,58,61,63,68,71,72,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,99,101,103,105,106,107,109,110,112,113,114,120,121,122,123,124,125,126,127,128,129,131,133,134,135,139,140,142,143,144,145,146,147,148,149,151,152,154,157,158,159,160,163,164,165,166,167,168,169,170,171,172,173,175,176,177,178,179,181,182,183,184,185,187,188,189,190,191,],[-2,8,-4,-2,-3,-6,-79,-8,46,-11,-9,57,-5,8,-10,8,8,8,-72,-30,-90,-27,-71,-84,-89,46,-25,-42,-85,-82,72,8,-28,-83,-87,-86,-24,-88,8,-26,-80,-29,-7,-78,-2,-23,104,-65,-2,-81,-2,57,112,-66,-2,116,119,8,8,8,-40,-60,-48,-52,-2,8,132,-44,-55,-47,-53,-91,-99,-2,8,-41,-38,-46,-36,-64,-39,-37,-77,-108,-110,-107,8,8,-102,-2,-49,8,-58,-56,-57,-54,8,-69,-111,-2,-2,161,116,8,8,-2,-105,-43,-62,-68,-34,-45,8,-103,-104,8,-106,-63,8,-67,-31,116,-109,-70,-2,46,-14,-13,-19,-20,-17,-16,46,-18,-12,-15,-2,8,-35,]),'DOCSTRING':([175,],[178,]),'COLON':([0,2,4,5,6,8,9,10,11,12,14,16,23,24,26,27,29,30,31,32,33,34,35,37,40,41,43,44,46,47,48,51,52,54,58,60,61,62,68,72,73,75,86,87,88,89,91,93,95,96,98,99,101,106,107,109,110,112,113,114,120,121,122,123,126,128,131,142,151,152,158,159,163,164,166,170,172,175,176,177,178,179,181,182,183,184,185,187,188,191,],[-2,-4,-2,-3,-6,-79,-8,49,-11,-9,-5,-10,-72,-30,-90,-27,-71,-84,-89,49,-25,-42,-85,-82,-28,-83,-87,-86,77,-24,-88,-26,-80,-29,-7,84,-78,85,-23,-65,105,-81,-40,-60,-48,-52,49,-44,-47,-53,136,-91,-99,-41,-38,-46,-36,-64,-39,-37,-77,-108,-110,-107,-102,-49,-58,-111,-105,-43,-34,-45,-103,-104,-106,-31,-109,-2,49,-14,-13,-19,-20,-17,-16,49,-18,-12,-15,-35,]),'OR':([8,121,122,123,126,150,151,163,164,166,172,],[-79,-108,148,-107,148,148,-105,-103,-104,-106,-109,]),'TRUE':([0,2,4,5,6,8,9,10,11,12,14,15,16,17,23,24,26,27,28,29,30,31,32,33,34,35,37,40,41,43,44,47,48,51,52,54,58,61,66,67,68,72,75,79,86,87,88,89,91,93,95,96,99,101,102,106,107,109,110,112,113,114,120,121,122,123,126,128,129,131,136,138,142,151,152,158,159,163,164,166,168,170,172,175,176,177,178,179,181,182,183,184,185,187,188,191,],[-2,-4,-2,-3,-6,-79,-8,48,-11,-9,-5,48,-10,48,-72,-30,-90,-27,-2,-71,-84,-89,48,-25,-42,-85,-82,-28,-83,-87,-86,-24,-88,-26,-80,-29,-7,-78,-98,48,-23,-65,-81,-66,-40,-60,-48,-52,48,-44,-47,-53,-91,-99,-97,-41,-38,-46,-36,-64,-39,-37,-77,-108,-110,-107,-102,-49,48,-58,48,-96,-111,-105,-43,-34,-45,-103,-104,-106,48,-31,-109,-2,48,-14,-13,-19,-20,-17,-16,48,-18,-12,-15,-35,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'unqualified_port':([10,32,63,74,76,80,90,127,143,176,184,],[18,18,87,87,87,87,87,87,87,180,180,]),'opt_argnames':([81,146,171,],[117,162,174,]),'internal_port_property':([176,184,],[179,179,]),'tag_value':([97,],[135,]),'compdefs':([4,],[9,]),'identifiers':([19,105,],[60,142,]),'value':([10,15,17,32,67,91,129,136,168,176,184,],[29,29,29,29,102,29,29,155,29,29,29,]),'implicit_outport':([10,32,176,184,],[21,21,21,21,]),'comp_statement':([176,184,],[183,188,]),'constdef':([0,5,],[6,14,]),'argnames':([81,146,171,],[115,115,115,]),'dictionary':([10,15,17,32,67,91,129,136,168,176,184,],[37,37,37,37,37,37,37,37,37,37,37,]),'real_outport':([10,32,176,184,],[53,53,53,53,]),'apply':([10,32,],[24,24,]),'opt_compdefs':([4,],[10,]),'named_args':([103,144,149,189,],[139,160,165,190,]),'real_or_internal_inport':([63,74,76,80,90,127,143,],[95,95,95,95,128,95,95,]),'link':([10,32,176,184,],[27,27,181,181,]),'predicate':([84,85,124,125,147,148,],[121,121,121,121,121,121,]),'qualified_name':([13,77,],[56,111,]),'bool':([10,15,17,32,67,91,129,136,168,176,184,],[30,30,30,30,30,30,30,30,30,30,30,]),'port_transform':([63,74,76,80,127,143,],[90,90,90,90,90,90,]),'internal_inport':([63,74,76,80,90,127,143,],[96,96,96,96,96,96,96,]),'inport':([63,74,76,80,127,143,],[93,93,93,93,152,152,]),'rule':([84,85,124,125,147,148,],[122,126,150,151,163,164,]),'program':([10,],[32,]),'assignment':([10,32,176,184,],[33,33,182,182,]),'empty':([0,4,10,25,28,36,63,74,76,80,81,90,103,127,143,144,146,149,171,175,180,189,],[2,12,22,64,66,70,94,94,94,94,118,94,140,94,94,140,118,140,118,177,70,140,]),'label':([10,32,91,176,184,],[17,17,129,17,17,]),'null':([10,15,17,32,67,91,129,136,168,176,184,],[35,35,35,35,35,35,35,35,35,35,35,]),'qualified_port':([10,32,92,176,184,],[36,36,131,36,36,]),'real_inport_list':([76,],[107,]),'named_arg':([139,160,165,190,],[157,157,157,157,]),'docstring':([175,],[176,]),'define_rule':([10,32,],[40,40,]),'array':([10,15,17,32,67,91,129,136,168,176,184,],[41,41,41,41,41,41,41,41,41,41,41,]),'internal_outport':([10,32,176,184,],[42,42,42,42,]),'inport_list':([63,74,76,80,],[86,106,108,113,]),'real_inport':([63,74,76,80,90,127,143,],[89,89,109,89,89,89,159,]),'string':([10,15,17,32,65,67,91,129,136,168,176,184,],[43,43,43,43,98,43,43,43,43,43,43,43,]),'opt_tag':([63,74,76,80,90,127,143,],[92,92,92,92,92,92,92,]),'values':([28,],[67,]),'compdef':([4,9,],[11,16,]),'void':([10,32,76,80,176,184,],[45,45,110,114,45,45,]),'identifier':([1,10,15,17,19,20,32,39,49,83,84,85,91,105,124,125,129,139,147,148,160,165,168,176,184,190,],[7,23,23,23,61,62,23,73,79,120,123,123,23,61,123,123,23,156,123,123,156,156,23,23,23,156,]),'member':([65,],[100,]),'comp_statements':([176,],[184,]),'statement':([10,32,],[47,68,]),'script':([0,],[3,]),'transformed_inport':([63,74,76,80,127,143,],[88,88,88,88,88,88,]),'opt_program':([10,],[50,]),'port_property':([10,32,176,184,],[51,51,185,185,]),'opt_constdefs':([0,],[4,]),'constdefs':([0,],[5,]),'members':([25,],[65,]),'opt_direction':([36,180,],[69,186,]),'group':([10,32,],[54,54,]),'argument':([10,15,17,32,91,129,168,176,184,],[55,58,59,55,130,153,173,55,55,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> script","S'",1,None,None,None),
  ('script -> opt_constdefs opt_compdefs opt_program','script',3,'p_script','parser.py',58),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',64),
  ('opt_constdefs -> constdefs','opt_constdefs',1,'p_opt_constdefs','parser.py',68),
  ('opt_constdefs -> empty','opt_constdefs',1,'p_opt_constdefs','parser.py',69),
  ('constdefs -> constdefs constdef','constdefs',2,'p_constdefs','parser.py',74),
  ('constdefs -> constdef','constdefs',1,'p_constdefs','parser.py',75),
  ('constdef -> DEFINE identifier EQ argument','constdef',4,'p_constdef','parser.py',83),
  ('opt_compdefs -> compdefs','opt_compdefs',1,'p_opt_compdefs','parser.py',89),
  ('opt_compdefs -> empty','opt_compdefs',1,'p_opt_compdefs','parser.py',90),
  ('compdefs -> compdefs compdef','compdefs',2,'p_compdefs','parser.py',94),
  ('compdefs -> compdef','compdefs',1,'p_compdefs','parser.py',95),
  ('compdef -> COMPONENT qualified_name LPAREN opt_argnames RPAREN opt_argnames RARROW opt_argnames LBRACE docstring comp_statements RBRACE','compdef',12,'p_compdef','parser.py',103),
  ('docstring -> DOCSTRING','docstring',1,'p_docstring','parser.py',108),
  ('docstring -> empty','docstring',1,'p_docstring','parser.py',109),
  ('comp_statements -> comp_statements comp_statement','comp_statements',2,'p_comp_statements','parser.py',113),
  ('comp_statements -> comp_statement','comp_statements',1,'p_comp_statements','parser.py',114),
  ('comp_statement -> assignment','comp_statement',1,'p_comp_statement','parser.py',121),
  ('comp_statement -> port_property','comp_statement',1,'p_comp_statement','parser.py',122),
  ('comp_statement -> internal_port_property','comp_statement',1,'p_comp_statement','parser.py',123),
  ('comp_statement -> link','comp_statement',1,'p_comp_statement','parser.py',124),
  ('opt_program -> program','opt_program',1,'p_opt_program','parser.py',128),
  ('opt_program -> empty','opt_program',1,'p_opt_program','parser.py',129),
  ('program -> program statement','program',2,'p_program','parser.py',133),
  ('program -> statement','program',1,'p_program','parser.py',134),
  ('statement -> assignment','statement',1,'p_statement','parser.py',141),
  ('statement -> port_property','statement',1,'p_statement','parser.py',142),
  ('statement -> link','statement',1,'p_statement','parser.py',143),
  ('statement -> define_rule','statement',1,'p_statement','parser.py',144),
  ('statement -> group','statement',1,'p_statement','parser.py',145),
  ('statement -> apply','statement',1,'p_statement','parser.py',146),
  ('assignment -> IDENTIFIER COLON qualified_name LPAREN named_args RPAREN','assignment',6,'p_assignment','parser.py',151),
  ('opt_direction -> LBRACK IDENTIFIER RBRACK','opt_direction',3,'p_opt_direction','parser.py',156),
  ('opt_direction -> empty','opt_direction',1,'p_opt_direction','parser.py',157),
  ('port_property -> qualified_port opt_direction LPAREN named_args RPAREN','port_property',5,'p_port_property','parser.py',171),
  ('internal_port_property -> unqualified_port opt_direction LPAREN named_args RPAREN','internal_port_property',5,'p_internal_port_property','parser.py',177),
  ('link -> void GT void','link',3,'p_link_error','parser.py',183),
  ('link -> real_outport GT void','link',3,'p_link','parser.py',191),
  ('link -> void GT real_inport_list','link',3,'p_link','parser.py',192),
  ('link -> real_outport GT inport_list','link',3,'p_link','parser.py',193),
  ('link -> implicit_outport GT inport_list','link',3,'p_link','parser.py',194),
  ('link -> internal_outport GT inport_list','link',3,'p_link','parser.py',195),
  ('void -> VOIDPORT','void',1,'p_void','parser.py',200),
  ('inport_list -> inport_list COMMA inport','inport_list',3,'p_inport_list','parser.py',204),
  ('inport_list -> inport','inport_list',1,'p_inport_list','parser.py',205),
  ('real_inport_list -> inport_list COMMA real_inport','real_inport_list',3,'p_real_inport_list','parser.py',215),
  ('real_inport_list -> real_inport','real_inport_list',1,'p_real_inport_list','parser.py',216),
  ('inport -> real_or_internal_inport','inport',1,'p_inport','parser.py',225),
  ('inport -> transformed_inport','inport',1,'p_inport','parser.py',226),
  ('transformed_inport -> port_transform real_or_internal_inport','transformed_inport',2,'p_transformed_inport','parser.py',230),
  ('implicit_outport -> argument','implicit_outport',1,'p_implicit_outport','parser.py',235),
  ('implicit_outport -> label argument','implicit_outport',2,'p_implicit_outport','parser.py',236),
  ('real_or_internal_inport -> real_inport','real_or_internal_inport',1,'p_real_or_internal_inport','parser.py',241),
  ('real_or_internal_inport -> internal_inport','real_or_internal_inport',1,'p_real_or_internal_inport','parser.py',242),
  ('opt_tag -> AT tag_value','opt_tag',2,'p_opt_tag','parser.py',246),
  ('opt_tag -> empty','opt_tag',1,'p_opt_tag','parser.py',247),
  ('tag_value -> NUMBER','tag_value',1,'p_tag_value','parser.py',251),
  ('tag_value -> STRING','tag_value',1,'p_tag_value','parser.py',252),
  ('real_inport -> opt_tag qualified_port','real_inport',2,'p_real_inport','parser.py',257),
  ('real_outport -> qualified_port','real_outport',1,'p_real_outport','parser.py',262),
  ('internal_inport -> unqualified_port','internal_inport',1,'p_internal_inport','parser.py',268),
  ('internal_outport -> unqualified_port','internal_outport',1,'p_internal_outport','parser.py',274),
  ('port_transform -> SLASH argument SLASH','port_transform',3,'p_port_transform','parser.py',280),
  ('port_transform -> SLASH label argument SLASH','port_transform',4,'p_port_transform','parser.py',281),
  ('qualified_port -> IDENTIFIER DOT IDENTIFIER','qualified_port',3,'p_qualified_port','parser.py',285),
  ('unqualified_port -> DOT IDENTIFIER','unqualified_port',2,'p_unqualified_port','parser.py',289),
  ('label -> COLON identifier','label',2,'p_label','parser.py',294),
  ('named_args -> named_args named_arg COMMA','named_args',3,'p_named_args','parser.py',298),
  ('named_args -> named_args named_arg','named_args',2,'p_named_args','parser.py',299),
  ('named_args -> empty','named_args',1,'p_named_args','parser.py',300),
  ('named_arg -> identifier EQ argument','named_arg',3,'p_named_arg','parser.py',304),
  ('argument -> value','argument',1,'p_argument','parser.py',309),
  ('argument -> identifier','argument',1,'p_argument','parser.py',310),
  ('opt_argnames -> argnames','opt_argnames',1,'p_opt_argnames','parser.py',315),
  ('opt_argnames -> empty','opt_argnames',1,'p_opt_argnames','parser.py',316),
  ('argnames -> argnames COMMA IDENTIFIER','argnames',3,'p_argnames','parser.py',321),
  ('argnames -> IDENTIFIER','argnames',1,'p_argnames','parser.py',322),
  ('identifiers -> identifiers COMMA identifier','identifiers',3,'p_identifiers','parser.py',332),
  ('identifiers -> identifier','identifiers',1,'p_identifiers','parser.py',333),
  ('identifier -> IDENTIFIER','identifier',1,'p_identifier','parser.py',338),
  ('string -> STRING','string',1,'p_string','parser.py',344),
  ('string -> string STRING','string',2,'p_string','parser.py',345),
  ('value -> dictionary','value',1,'p_value','parser.py',349),
  ('value -> array','value',1,'p_value','parser.py',350),
  ('value -> bool','value',1,'p_value','parser.py',351),
  ('value -> null','value',1,'p_value','parser.py',352),
  ('value -> NUMBER','value',1,'p_value','parser.py',353),
  ('value -> string','value',1,'p_value','parser.py',354),
  ('bool -> TRUE','bool',1,'p_bool','parser.py',359),
  ('bool -> FALSE','bool',1,'p_bool','parser.py',360),
  ('null -> NULL','null',1,'p_null','parser.py',365),
  ('dictionary -> LBRACE members RBRACE','dictionary',3,'p_dictionary','parser.py',370),
  ('members -> members member COMMA','members',3,'p_members','parser.py',375),
  ('members -> members member','members',2,'p_members','parser.py',376),
  ('members -> empty','members',1,'p_members','parser.py',377),
  ('member -> string COLON value','member',3,'p_member','parser.py',381),
  ('values -> values value COMMA','values',3,'p_values','parser.py',386),
  ('values -> values value','values',2,'p_values','parser.py',387),
  ('values -> empty','values',1,'p_values','parser.py',388),
  ('array -> LBRACK values RBRACK','array',3,'p_array','parser.py',392),
  ('qualified_name -> qualified_name DOT IDENTIFIER','qualified_name',3,'p_qualified_name','parser.py',396),
  ('qualified_name -> IDENTIFIER','qualified_name',1,'p_qualified_name','parser.py',397),
  ('define_rule -> RULE identifier COLON rule','define_rule',4,'p_define_rule','parser.py',428),
  ('rule -> rule AND rule','rule',3,'p_combine_rule','parser.py',432),
  ('rule -> rule OR rule','rule',3,'p_combine_rule','parser.py',433),
  ('rule -> UNOT rule','rule',2,'p_negate_rule','parser.py',437),
  ('rule -> LPAREN rule RPAREN','rule',3,'p_subrule','parser.py',441),
  ('rule -> identifier','rule',1,'p_rule','parser.py',445),
  ('rule -> predicate','rule',1,'p_rule','parser.py',446),
  ('predicate -> identifier LPAREN named_args RPAREN','predicate',4,'p_predicate','parser.py',450),
  ('apply -> APPLY identifiers COLON rule','apply',4,'p_apply','parser.py',454),
  ('group -> GROUP identifier COLON identifiers','group',4,'p_group','parser.py',460),
]
