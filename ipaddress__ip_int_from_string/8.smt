(set-option :produce-models true)
 (set-logic ALL)
(declare-fun *ip_str () String)
(declare-fun *@ss292 () String )
(declare-fun *@ss2922 () String )
(declare-fun *@ss2923 () String )
(declare-fun *@ss2920 () String )
(declare-fun *@ss2921 () String )
(declare-fun *@slen060 () String )
(declare-fun *@slen061 () String )
(declare-fun *@slen062 () String )
(declare-fun *@sstring33 () String )
(declare-fun *@slen330 () String )
(declare-fun *@slen331 () String )
(declare-fun *@slen332 () String )
(declare-fun *@slen333 () String )
(declare-fun *@slen334 () String )
(declare-fun *@slen335 () String )
(declare-fun *@slen336 () String )
(declare-fun *@slen337 () String )
(declare-fun *@slen338 () String )
(declare-fun *@slen339 () String )
(declare-fun *@slen880 () String )
(declare-fun *@slen881 () String )
(declare-fun *@slen882 () String )
(declare-fun *@slen883 () String )
(declare-fun *@slen884 () String )
(declare-fun *@slen885 () String )
(declare-fun *@slen886 () String )
(declare-fun *@slen887 () String )
(declare-fun *@sstring292 () String )
(assert (not (= (str.len *ip_str) 0)  ) )
(assert (not (str.contains *@ss2922 ".")  ) )
(assert (not (= (str.len *@ss2923) 0)  ) )
(assert (not (= (str.len *@ss2922) 0)  ) )
(assert (not (not (str.contains "0123456789ABCDEFabcdef" (str.at *@ss2923 0 )))  ) )
(assert (not (not (str.contains "0123456789ABCDEFabcdef" (str.at *@ss2923 1 )))  ) )
(assert (not (not (str.contains "0123456789ABCDEFabcdef" (str.at *@ss2923 2 )))  ) )
(assert (not (> (str.len *@ss2923) 4)  ) )
(assert (not (= (str.at *@ss2923 0 ) "a")  ) )
(assert (not (= (str.at *@ss2923 0 ) "A")  ) )
(assert (not (= (str.at *@ss2923 0 ) "b")  ) )
(assert (not (= (str.at *@ss2923 0 ) "B")  ) )
(assert (not (= (str.at *@ss2923 0 ) "c")  ) )
(assert (not (= (str.at *@ss2923 0 ) "C")  ) )
(assert (not (= (str.at *@ss2923 0 ) "d")  ) )
(assert (not (= (str.at *@ss2923 0 ) "D")  ) )
(assert (not (= (str.at *@ss2923 0 ) "e")  ) )
(assert (not (= (str.at *@ss2923 0 ) "E")  ) )
(assert (not (= (str.at *@ss2923 0 ) "f")  ) )
(assert (= (str.at *@ss2923 0 ) "F")  )
(assert (= *ip_str (str.++  *@ss2920 ":"  *@ss2921 ":"  *@ss2922 ":"  *@ss2923 *@sstring292 )))
(assert (not (str.contains *@slen060 ":")))
(assert (not (str.contains *@slen061 ":")))
(assert (not (str.contains *@slen062 ":")))
(assert (or (= *@ss292 (str.++  *@slen060  ""))(or (= *@ss292 (str.++  *@slen060  ":" *@slen061  ""))(or (= *@ss292 (str.++  *@slen060  ":" *@slen061  ":" *@slen062  "")) false ))))
(assert (= *ip_str *@ss292)) 
(assert (= *@ss292 (str.++ *@slen330  ":" *@slen331  ":" *@slen332  ":" *@slen333  ":" *@slen334  ":" *@slen335  ":" *@slen336  ":" *@slen337  ":" *@slen338  ":"  *@slen339 *@sstring33  )))
(assert (= *ip_str *@ss292)) 
(assert (= *@ss292 (str.++ *@slen880  ":" *@slen881  ":" *@slen882  ":" *@slen883  ":" *@slen884  ":" *@slen885  ":" *@slen886  ":"  *@slen887  "")))
(assert (= *ip_str *@ss292)) 
(check-sat)
 (get-model)
