(set-option :produce-models true)
 (set-logic ALL)
(declare-fun *ip_str () String)
(declare-fun *@ss767 () String )
(declare-fun *@ss7672 () String )
(declare-fun *@ss7673 () String )
(declare-fun *@ss7670 () String )
(declare-fun *@ss7671 () String )
(declare-fun *@slen000 () String )
(declare-fun *@slen001 () String )
(declare-fun *@slen002 () String )
(declare-fun *@sstring06 () String )
(declare-fun *@slen060 () String )
(declare-fun *@slen061 () String )
(declare-fun *@slen062 () String )
(declare-fun *@slen063 () String )
(declare-fun *@slen064 () String )
(declare-fun *@slen065 () String )
(declare-fun *@slen066 () String )
(declare-fun *@slen067 () String )
(declare-fun *@slen068 () String )
(declare-fun *@slen069 () String )
(declare-fun *@slen390 () String )
(declare-fun *@slen391 () String )
(declare-fun *@slen392 () String )
(declare-fun *@slen393 () String )
(declare-fun *@slen394 () String )
(declare-fun *@slen395 () String )
(declare-fun *@slen396 () String )
(declare-fun *@slen397 () String )
(declare-fun *@sstring767 () String )
(assert (not (= (str.len *ip_str) 0)  ) )
(assert (not (str.contains *@ss7672 ".")  ) )
(assert (not (= (str.len *@ss7673) 0)  ) )
(assert (not (= (str.len *@ss7672) 0)  ) )
(assert (not (not (str.contains "0123456789ABCDEFabcdef" (str.at *@ss7673 0 )))  ) )
(assert (not (not (str.contains "0123456789ABCDEFabcdef" (str.at *@ss7673 1 )))  ) )
(assert (not (not (str.contains "0123456789ABCDEFabcdef" (str.at *@ss7673 2 )))  ) )
(assert (not (> (str.len *@ss7673) 4)  ) )
(assert (not (= (str.at *@ss7673 0 ) "a")  ) )
(assert (not (= (str.at *@ss7673 0 ) "A")  ) )
(assert (not (= (str.at *@ss7673 0 ) "b")  ) )
(assert (not (= (str.at *@ss7673 0 ) "B")  ) )
(assert (not (= (str.at *@ss7673 0 ) "c")  ) )
(assert (not (= (str.at *@ss7673 0 ) "C")  ) )
(assert (not (= (str.at *@ss7673 0 ) "d")  ) )
(assert (not (= (str.at *@ss7673 0 ) "D")  ) )
(assert (not (= (str.at *@ss7673 0 ) "e")  ) )
(assert (= (str.at *@ss7673 0 ) "E")  )
(assert (= *ip_str (str.++  *@ss7670 ":"  *@ss7671 ":"  *@ss7672 ":"  *@ss7673 *@sstring767 )))
(assert (not (str.contains *@slen000 ":")))
(assert (not (str.contains *@slen001 ":")))
(assert (not (str.contains *@slen002 ":")))
(assert (or (= *@ss767 (str.++  *@slen000  ""))(or (= *@ss767 (str.++  *@slen000  ":" *@slen001  ""))(or (= *@ss767 (str.++  *@slen000  ":" *@slen001  ":" *@slen002  "")) false ))))
(assert (= *ip_str *@ss767)) 
(assert (= *@ss767 (str.++ *@slen060  ":" *@slen061  ":" *@slen062  ":" *@slen063  ":" *@slen064  ":" *@slen065  ":" *@slen066  ":" *@slen067  ":" *@slen068  ":"  *@slen069 *@sstring06  )))
(assert (= *ip_str *@ss767)) 
(assert (= *@ss767 (str.++ *@slen390  ":" *@slen391  ":" *@slen392  ":" *@slen393  ":" *@slen394  ":" *@slen395  ":" *@slen396  ":"  *@slen397  "")))
(assert (= *ip_str *@ss767)) 
(check-sat)
 (get-model)
