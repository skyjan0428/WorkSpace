(set-option :produce-models true)
 (set-logic ALL)
(declare-fun *ip_str () String)
(declare-fun *@ss880 () String )
(declare-fun *@ss8802 () String )
(declare-fun *@ss8803 () String )
(declare-fun *@ss8800 () String )
(declare-fun *@ss8801 () String )
(declare-fun *@slen390 () String )
(declare-fun *@slen391 () String )
(declare-fun *@slen392 () String )
(declare-fun *@sstring82 () String )
(declare-fun *@slen820 () String )
(declare-fun *@slen821 () String )
(declare-fun *@slen822 () String )
(declare-fun *@slen823 () String )
(declare-fun *@slen824 () String )
(declare-fun *@slen825 () String )
(declare-fun *@slen826 () String )
(declare-fun *@slen827 () String )
(declare-fun *@slen828 () String )
(declare-fun *@slen829 () String )
(declare-fun *@slen100 () String )
(declare-fun *@slen101 () String )
(declare-fun *@slen102 () String )
(declare-fun *@slen103 () String )
(declare-fun *@slen104 () String )
(declare-fun *@slen105 () String )
(declare-fun *@slen106 () String )
(declare-fun *@slen107 () String )
(declare-fun *@sstring880 () String )
(assert (not (= (str.len *ip_str) 0)  ) )
(assert (not (str.contains *@ss8802 ".")  ) )
(assert (not (= (str.len *@ss8803) 0)  ) )
(assert (not (= (str.len *@ss8802) 0)  ) )
(assert (not (not (str.contains "0123456789ABCDEFabcdef" (str.at *@ss8803 0 )))  ) )
(assert (not (not (str.contains "0123456789ABCDEFabcdef" (str.at *@ss8803 1 )))  ) )
(assert (not (not (str.contains "0123456789ABCDEFabcdef" (str.at *@ss8803 2 )))  ) )
(assert (not (> (str.len *@ss8803) 4)  ) )
(assert (not (= (str.at *@ss8803 0 ) "a")  ) )
(assert (not (= (str.at *@ss8803 0 ) "A")  ) )
(assert (not (= (str.at *@ss8803 0 ) "b")  ) )
(assert (not (= (str.at *@ss8803 0 ) "B")  ) )
(assert (not (= (str.at *@ss8803 0 ) "c")  ) )
(assert (not (= (str.at *@ss8803 0 ) "C")  ) )
(assert (not (= (str.at *@ss8803 0 ) "d")  ) )
(assert (not (= (str.at *@ss8803 0 ) "D")  ) )
(assert (not (= (str.at *@ss8803 0 ) "e")  ) )
(assert (not (= (str.at *@ss8803 0 ) "E")  ) )
(assert (not (= (str.at *@ss8803 0 ) "f")  ) )
(assert (not (= (str.at *@ss8803 0 ) "F")  ) )
(assert (= *ip_str (str.++  *@ss8800 ":"  *@ss8801 ":"  *@ss8802 ":"  *@ss8803 *@sstring880 )))
(assert (not (str.contains *@slen390 ":")))
(assert (not (str.contains *@slen391 ":")))
(assert (not (str.contains *@slen392 ":")))
(assert (or (= *@ss880 (str.++  *@slen390  ""))(or (= *@ss880 (str.++  *@slen390  ":" *@slen391  ""))(or (= *@ss880 (str.++  *@slen390  ":" *@slen391  ":" *@slen392  "")) false ))))
(assert (= *ip_str *@ss880)) 
(assert (= *@ss880 (str.++ *@slen820  ":" *@slen821  ":" *@slen822  ":" *@slen823  ":" *@slen824  ":" *@slen825  ":" *@slen826  ":" *@slen827  ":" *@slen828  ":"  *@slen829 *@sstring82  )))
(assert (= *ip_str *@ss880)) 
(assert (= *@ss880 (str.++ *@slen100  ":" *@slen101  ":" *@slen102  ":" *@slen103  ":" *@slen104  ":" *@slen105  ":" *@slen106  ":"  *@slen107  "")))
(assert (= *ip_str *@ss880)) 
(check-sat)
 (get-model)
