(set-option :produce-models true)
(set-logic ALL)
(declare-fun date_str () String)
(declare-fun time_str () String)
(assert (= (str.len date_str) 14))
(assert (>= (str.to.int (str.substr (str.substr date_str (- (str.len date_str) 6) (str.len date_str)) 0 2)) 0))
(assert (>= (str.to.int (str.substr (str.substr date_str (- (str.len date_str) 6) (str.len date_str)) 2 4)) 0))
(assert (>= (str.to.int (str.substr (str.substr date_str (- (str.len date_str) 6) (str.len date_str)) 4 (str.len (str.substr date_str (- (str.len date_str) 6) (str.len date_str))))) 0))
(assert (>= (str.to.int (str.substr (str.substr date_str 0 (- (str.len date_str) 6)) 0 (- (str.len (str.substr date_str 0 (- (str.len date_str) 6))) 4))) 0))
(assert (>= (str.to.int (str.substr (str.substr date_str 0 (- (str.len date_str) 6)) (- (str.len (str.substr date_str 0 (- (str.len date_str) 6))) 4) (- (str.len (str.substr date_str 0 (- (str.len date_str) 6))) 2))) 0))
(assert (>= (str.to.int (str.substr (str.substr date_str 0 (- (str.len date_str) 6)) (- (str.len (str.substr date_str 0 (- (str.len date_str) 6))) 2) (str.len (str.substr date_str 0 (- (str.len date_str) 6))))) 0))
(assert (not (< (str.to.int (str.substr (str.substr date_str 0 (- (str.len date_str) 6)) 0 (- (str.len (str.substr date_str 0 (- (str.len date_str) 6))) 4))) 70)))
(assert (< (str.to.int (str.substr (str.substr date_str 0 (- (str.len date_str) 6)) 0 (- (str.len (str.substr date_str 0 (- (str.len date_str) 6))) 4))) 100))
(check-sat)
(get-model)

